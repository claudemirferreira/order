version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: pedido-db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"  # Mapeia a porta 3306 do contêiner para a porta 3306 do host
    volumes:
      - mysql_data:/var/lib/mysql  # Persistência de dados
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Script de inicialização
    networks:
      - pedido_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1  # Imagem oficial do Zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pedido_network

  broker:
    image: confluentinc/cp-kafka:7.0.1  # Imagem oficial do Kafka
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"  # Porta padrão do Kafka
      - "29092:29092"  # Porta para acesso externo
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - pedido_network

  kafkaui:
    image: provectuslabs/kafka-ui:latest  # Interface gráfica para o Kafka
    container_name: kafkaui
    ports:
      - "8082:8080"  # Porta para acessar a interface do Kafka UI
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092  # Conecta ao broker Kafka
    depends_on:
      - broker
    networks:
      - pedido_network

volumes:
  mysql_data:  # Volume para persistir os dados do MySQL

networks:
  pedido_network:  # Rede para conectar todos os serviços