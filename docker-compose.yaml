version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: admin  # Senha do root
      MYSQL_DATABASE: pedido-db         # Banco de dados inicial
      MYSQL_USER: admin                 # Usuário regular (não root)
      MYSQL_PASSWORD: admin        # Senha do usuário regular
    ports:
      - "3306:3306"  # Mapeia a porta 3306 do contêiner para a porta 3306 do host
    volumes:
      - mysql_data:/var/lib/mysql  # Persistência de dados
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Script de inicialização
    networks:
      - pedido_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - pedido_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - pedido_network

  kafkaui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    restart: always
    networks:
      - pedido_network

volumes:
  mysql_data:  # Volume para persistir os dados do MySQL

networks:
  pedido_network:  # Rede para os contêineres Kafka e Zookeeper